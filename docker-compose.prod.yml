x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2024-07-16T23-46-41Z
  command: server --console-address ":9001" http://minio{1...2}/data{1...2}
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: ${MINIO_USER}
    MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
  restart: unless-stopped
  healthcheck:
    test: ["CMD", "mc", "ready", "local"]
    interval: 5s
    timeout: 5s
    retries: 5


services:
  memes_service:
    container_name: memes_api
    build:
      dockerfile: docker/Dockerfile
      context: ./memes_service
      target: production
    ports:
      - "80:80"
    restart: unless-stopped
    depends_on:
      - memes_db
    networks:
      default:
      memes_service_backend:

  memes_db:
    container_name: memes_postgres
    image: postgres:16
    restart: unless-stopped
    env_file:
      - ./memes_service/.env
    volumes:
      - memes_postgres_data:/var/lib/postgresql/data
    networks:
      memes_service_backend:
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U memes_service -d memes_service'" ]
      interval: 30s
      timeout: 30s
      retries: 5

  media_files_service:
    container_name: media_files_api
    build:
      dockerfile: docker/Dockerfile
      context: ./media_files_service
      target: production
    restart: unless-stopped
    networks:
      default:
      media_files_service_backend:

  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - minio-data1-1:/data1
      - minio-data1-2:/data2
    networks:
      minio:

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - minio-data2-1:/data1
      - minio-data2-2:/data2
    networks:
      minio:

  minio-nginx:
    image: nginx:1.19.2-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    expose:
      - "9000"
    ports:
      - "9001:9001"
    restart: unless-stopped
    networks:
      minio:
      media_files_service_backend:
    depends_on:
      - minio1
      - minio2


networks:
  memes_service_backend:
    driver: bridge
  media_files_service_backend:
    driver: bridge
  minio:
    driver: bridge


volumes:
  memes_postgres_data:

  minio-data1-1:
  minio-data1-2:
  minio-data2-1:
  minio-data2-2:
